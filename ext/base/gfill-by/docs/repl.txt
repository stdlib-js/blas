
{{alias}}( N, x, strideX, clbk[, thisArg] )
    Fills a strided array according to a provided callback function.

    The `N` and stride parameters determine which elements in the strided array
    are accessed at runtime.

    Indexing is relative to the first index. To introduce an offset, use typed
    array views.

    If `N <= 0`, the function returns `x` unchanged.

    The callback function is provided four arguments:

    - value: current array element.
    - aidx: array index.
    - sidx: strided index (offset + aidx*stride).
    - array: the input array.

    The callback return value is used as the fill value for the current array
    index.

    Parameters
    ----------
    N: integer
        Number of indexed elements.

    x: ArrayLikeObject
        Input array.

    strideX: integer
        Stride length.

    clbk: Function
        Callback function.

    thisArg: any (optional)
        Execution context.

    Returns
    -------
    x: ArrayLikeObject
        Input array.

    Examples
    --------
    // Standard Usage:
    > function fill() { return 5.0; };
    > var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, -1.0, -3.0 ];
    > {{alias}}( x.length, x, 1, fill )
    [ 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0 ]

    // Using `N` and stride parameters:
    > x = [ -2.0, 1.0, 3.0, -5.0, 4.0, -1.0, -3.0 ];
    > {{alias}}( 3, x, 2, fill )
    [ 5.0, 1.0, 5.0, -5.0, 5.0, -1.0, -3.0 ]

    // Using view offsets:
    > var x0 = new {{alias:@stdlib/array/float64}}( [ 1.0, -2.0, 3.0, -4.0, 5.0, -6.0 ] );
    > var x1 = new {{alias:@stdlib/array/float64}}( x0.buffer, x0.BYTES_PER_ELEMENT*1 );
    > {{alias}}( 3, x1, 2, fill )
    <Float64Array>[ 5.0, 3.0, 5.0, 5.0, 5.0 ]
    > x0
    <Float64Array>[ 1.0, 5.0, 3.0, 5.0, 5.0, 5.0 ]


{{alias}}.ndarray( N, x, strideX, offsetX, clbk[, thisArg] )
    Fills a strided array according to a provided callback function and using
    alternative indexing semantics.

    While typed array views mandate a view offset based on the underlying
    buffer, the offset parameter supports indexing semantics based on a
    starting index.

    Parameters
    ----------
    N: integer
        Number of indexed elements.

    x: ArrayLikeObject
        Input array.

    strideX: integer
        Stride length.

    offsetX: integer
        Starting index.

    clbk: Function
        Callback function.

    thisArg: any (optional)
        Execution context.

    Returns
    -------
    x: ArrayLikeObject
        Input array.

    Examples
    --------
    // Standard Usage:
    > function fill() { return 5.0; };
    > var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, -1.0, -3.0 ];
    > {{alias}}.ndarray( x.length, x, 1, 0, fill )
    [ 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0 ]

    // Using an index offset:
    > x = [ 1.0, -2.0, 3.0, -4.0, 5.0, -6.0 ];
    > {{alias}}.ndarray( 3, x, 2, 1, fill )
    [ 1.0, 5.0, 3.0, 5.0, 5.0, 5.0 ]

    See Also
    --------

